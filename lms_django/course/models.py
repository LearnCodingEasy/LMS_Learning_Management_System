# uuid: ููุณุชุฎุฏู ูุฅูุดุงุก ูุนุฑููุงุช ูุฑูุฏุฉ ุนุงูููุงู
# (UUID) ุงูุชู ูููู ุงุณุชุฎุฏุงููุง ูุชุนุฑูู ุงููุณุชุฎุฏููู.
import uuid

# ๐ฆ Import ุฅุนุฏุงุฏุงุช ุงููุดุฑูุน ุงูุฃุณุงุณูุฉ ูููุงุฐุฌ ุงููุณุชุฎุฏููู ูู Django
from django.conf import settings

# ๏ฟฝ๏ฟฝ๏ฟฝ๏ธ ุชุนุฑูู ูููุฐุฌ "ุงููุณุชุฎุฏู"
from account.models import User


from django.db import models


# ๐ท๏ธ ุชุนุฑูู ูููุฐุฌ "ุงููุฆุฉ" ูุชุตููู ุงูุฏูุฑุงุช
class Category(models.Model):
    # ๐ Define the primary field to be UUID  ุชุนุฑูู ุงูุญูู ุงูุฃุณุงุณู ููููู
    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)

    # ุนููุงู ุงููุฆุฉ ุจุญุฏ ุฃูุตู 255 ุญุฑููุง
    title = models.CharField(max_length=255)
    # ุญูู ุงูู slug ูุนููุงู URL ูุงุจู ูููุฑุงุกุฉ
    slug = models.SlugField()
    # ูุตู ูุตูุฑ ูููุฆุฉ ูููู ุฃู ูููู ูุงุฑุบูุง
    short_description = models.TextField(blank=True, null=True)
    # ุชุงุฑูุฎ ุฅูุดุงุก ุงููุฆุฉ (ููุถุงู ุชููุงุฆููุง ุนูุฏ ุงูุฅูุดุงุก)
    created_at = models.DateField(auto_now_add=True)

    # ูุถุจุท ุงูุงุณู ุงูุฌูุนู ูููููุฐุฌ ุนูุฏ ุงูุนุฑุถ ูู ููุญุฉ ุงูุฅุฏุงุฑุฉ
    class Meta:
        verbose_name_plural = "Categories"

    # ๐ ูุนุฑุถ ุนููุงู ุงููุฆุฉ ุนูุฏ ุงุณุชุฏุนุงุก ุงููููุฐุฌ ูููุนุฑููู ูุตู
    def __str__(self):
        return self.title


# ๐ ุชุนุฑูู ูููุฐุฌ "ุงูุฏูุฑุฉ"
class Course(models.Model):
    # ___________________
    # ุญูู ูุชู ุชุนุจุฆุฉ ุชููุงุฆู
    # ___________________
    # ๐ Define the primary field to be UUID  ุชุนุฑูู ุงูุญูู ุงูุฃุณุงุณู ููููู
    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
    # ุชุงุฑูุฎ ุงูุฅูุดุงุก (ููุถุงู ุชููุงุฆููุง ุนูุฏ ุงูุฅูุดุงุก)
    created_at = models.DateField(auto_now_add=True)
    # ๐ ุนูุงูุฉ ุจูู ุงูุฏูุฑุฉ ูุงููุณุชุฎุฏู ุงูุฐู ุฃูุดุฃูุง
    created_by = models.ForeignKey(
        User, related_name="courses", on_delete=models.CASCADE
    )

    # ___________________
    # ุญูู ูุชู ุชุนุจุฆุฉ ูู ุงููุณุชุฎุฏุงู
    # ___________________
    # ุญุงูุงุช ูุฎุชููุฉ ูุญุงูุฉ ุงูุฏูุฑุฉ
    DRAFT = "draft"
    IN_REVIEW = "in_review"
    PUBLISHED = "published"
    # ูุณูุฏุฉ
    # ููุฏ ุงููุฑุงุฌุนุฉ
    # ููุดูุฑุฉ
    STATUS_CHOICES = (
        (DRAFT, "Draft"),
        (IN_REVIEW, "In review"),
        (PUBLISHED, "Published"),
    )
    # ๐ ุงุฑุชุจุงุทุงุช ุจูู ุงูุฏูุฑุงุช ูุงููุฆุงุช (ุนูุงูุฉ ูุชุนุฏุฏ ููุชุนุฏุฏ)
    categories = models.ManyToManyField(Category)
    # ุนููุงู ุงูุฏูุฑุฉ ุจุญุฏ ุฃูุตู 255 ุญุฑููุง
    title = models.CharField(max_length=255)
    # ุญูู ุงูู slug ูุนููุงู URL ุงูุฎุงุต ุจุงูุฏูุฑุฉ
    slug = models.SlugField()
    # ูุตู ูุตูุฑ ูููู ุฃู ูููู ูุงุฑุบูุง
    short_description = models.TextField(blank=True, null=True)
    # ูุตู ุทููู ูููู ุฃู ูููู ูุงุฑุบูุง
    long_description = models.TextField(blank=True, null=True)
    # ุตูุฑุฉ ูุตุบุฑุฉ ููุฏูุฑุฉ
    image = models.ImageField(upload_to="courses", blank=True, null=True)
    # ุงูุญุงูุฉ ุงูุญุงููุฉ ููุฏูุฑุฉ
    status = models.CharField(max_length=25, choices=STATUS_CHOICES, default=DRAFT)

    # ุชุฑุชูุจ ุงูุฏูุฑุงุช ุงูุฃุญุฏุซ ุฃูููุง
    class Meta:
        ordering = ("-created_at",)

    # ๐ ูุนุฑุถ ุนููุงู ุงูุฏูุฑุฉ ุนูุฏ ุงุณุชุฏุนุงุก ุงููููุฐุฌ ูููุนุฑููู ูุตู
    def __str__(self):
        return self.title

    # ๐ผ๏ธ ุฅุฑุฌุงุน ุฑุงุจุท ุงูุตูุฑุฉ ุฃู ุตูุฑุฉ ุงูุชุฑุงุถูุฉ
    def get_image(self):
        if self.image:
            return settings.WEBSITE_URL + self.image.url
        else:
            return "http://bulma.io/images/placeholders/1280x960.png"


# ๐ ุชุนุฑูู ูููุฐุฌ "ุงูุฏุฑุณ
class Lesson(models.Model):
    # ๐ Define the primary field to be UUID  ุชุนุฑูู ุงูุญูู ุงูุฃุณุงุณู ููููู
    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)

    # ุญุงูุงุช ูุฎุชููุฉ ูุญุงูุฉ ุงูุฏุฑุณ
    DRAFT = "draft"
    PUBLISHED = "published"
    # ูุณูุฏุฉ
    # ููุดูุฑุฉ
    CHOICES_STATUS = ((DRAFT, "Draft"), (PUBLISHED, "Published"))

    # ุฃููุงุน ุงูุฏุฑูุณ ุงููุฎุชููุฉ
    ARTICLE = "article"
    QUIZ = "quiz"
    VIDEO = "video"
    # ููุงูุฉ
    # ุงุฎุชุจุงุฑ
    # ููุฏูู
    CHOICES_LESSON_TYPE = (
        (ARTICLE, "Article"),
        (QUIZ, "Quiz"),
        (VIDEO, "Video"),
    )
    # ๐ ุงุฑุชุจุงุท ุงูุฏุฑุณ ุจุงูุฏูุฑุฉ (ุนูุงูุฉ ูุงุญุฏ ููุชุนุฏุฏ)
    course = models.ForeignKey(Course, related_name="lessons", on_delete=models.CASCADE)
    # ุนููุงู ุงูุฏุฑุณ
    title = models.CharField(max_length=255)
    # ุญูู ุงูู slug ูุนููุงู URL ุงูุฎุงุต ุจุงูุฏุฑุณ
    slug = models.SlugField()
    # ูุตู ูุตูุฑ
    short_description = models.TextField(blank=True, null=True)
    # ูุตู ุทููู
    long_description = models.TextField(blank=True, null=True)
    # ุงูุญุงูุฉ ุงูุญุงููุฉ ููุฏุฑุณ
    status = models.CharField(max_length=20, choices=CHOICES_STATUS, default=PUBLISHED)
    # ููุน ุงูุฏุฑุณ
    lesson_type = models.CharField(
        max_length=20, choices=CHOICES_LESSON_TYPE, default=ARTICLE
    )
    # ูุนุฑู ููุฏูู ุนูู YouTube ุฅุฐุง ูุงู ุงูุฏุฑุณ ุนุจุงุฑุฉ ุนู ููุฏูู
    youtube_id = models.CharField(max_length=20, blank=True, null=True)

    # ๐ ูุนุฑุถ ุนููุงู ุงูุฏูุฑุฉ ุนูุฏ ุงุณุชุฏุนุงุก ุงููููุฐุฌ ูููุนุฑููู ูุตู
    def __str__(self):
        return self.title


# ๐ฌ ุชุนุฑูู ูููุฐุฌ "ุงูุชุนูููุงุช"
class Comment(models.Model):
    # ๐ Define the primary field to be UUID  ุชุนุฑูู ุงูุญูู ุงูุฃุณุงุณู ููููู
    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)

    # ๐ ุงุฑุชุจุงุท ุงูุชุนููู ุจุงูุฏูุฑุฉ ูุงูุฏุฑุณ
    course = models.ForeignKey(
        Course, related_name="comments", on_delete=models.CASCADE
    )
    lesson = models.ForeignKey(
        Lesson, related_name="comments", on_delete=models.CASCADE
    )
    # ุงุณู ุงูุดุฎุต ุงูุฐู ูุงู ุจูุชุงุจุฉ ุงูุชุนููู
    name = models.CharField(max_length=100)
    # ูุญุชูู ุงูุชุนููู
    content = models.TextField()
    # ุชุงุฑูุฎ ูููุช ุฅูุดุงุก ุงูุชุนููู (ููุถุงู ุชููุงุฆููุง ุนูุฏ ุงูุฅูุดุงุก)
    created_at = models.DateTimeField(auto_now_add=True)
    # ๐ ุงููุณุชุฎุฏู ุงูุฐู ุฃูุดุฃ ุงูุชุนููู
    created_by = models.ForeignKey(
        User, related_name="comments", on_delete=models.CASCADE
    )


# โ ุชุนุฑูู ูููุฐุฌ "ุงูุงุฎุชุจุงุฑุงุช"
class Quiz(models.Model):
    # ๐ Define the primary field to be UUID  ุชุนุฑูู ุงูุญูู ุงูุฃุณุงุณู ููููู
    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)

    # ๐ ุงุฑุชุจุงุท ุงูุงุฎุชุจุงุฑ ุจุงูุฏุฑุณ
    lesson = models.ForeignKey(Lesson, related_name="quizzes", on_delete=models.CASCADE)
    # ุณุคุงู ุงูุงุฎุชุจุงุฑ
    question = models.CharField(max_length=200, null=True)
    # ุงูุฅุฌุงุจุฉ ุงูุตุญูุญุฉ
    answer = models.CharField(max_length=200, null=True)
    # ุงูุฎูุงุฑุงุช ุงูุซูุงุซุฉ ุงูุฅุถุงููุฉ
    op1 = models.CharField(max_length=200, null=True)
    op2 = models.CharField(max_length=200, null=True)
    op3 = models.CharField(max_length=200, null=True)

    # ูุถุจุท ุงูุงุณู ุงูุฌูุนู ูููููุฐุฌ ุนูุฏ ุงูุนุฑุถ ูู ููุญุฉ ุงูุฅุฏุงุฑุฉ
    class Meta:
        verbose_name_plural = "Quizzes"
